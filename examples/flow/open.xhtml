<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xt="http://ns.inria.org/xtiger" xml:lang="en">
<head>                  
  <!-- Use UTF-8 and avoid the xml protocol declaration at the top for Internet Explorer -->
	<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=8;" />
	<meta name="description" content="This page show how to use the API to load XML content in a document template."/>
	<meta name="keywords" content="editor, XML, document template"/>
	<meta name="author" content="StÃ©phane Sire" />
	<title>XTiger XML tutorial showing XML content loading</title>
	
	<style type="text/css">
	body {
		padding: 0;
		margin: 0;
		min-width: 650px;
	}
	div#menu {
		background: lightgray;
		padding: 5px 40px 5px 40px;
	}	
	#document {
		border: none;
		background: white;  
		position: fixed;
		top: 4em;
		right: 10px;
		bottom: 10px;
		left: 10px;	
		margin: 0;		
		padding: 0;
		z-index: 2;
	}
	#container {
		border: none;
		position: static;
		width: 100%;
		height: 100%;
	}
	.center {
		margin: 0 auto;
	}
	</style>

	<script type="text/javascript" src="../../axel/axel.js"></script>
	<script type="text/javascript" src="../../src/util/debug.js"></script>			

	<script type="text/javascript">	
		var FORM;
		var XTD_FILE = "../../Templates/Fiche-Cafe-Flow.xhtml";
		var MAIN_DATA_FILE = "mainFlow.xml"; // This could be a URL too
		var FLOW_DATA_FILE = "separateFlow.xml"; 
		var FLOW_NAME = 'slots';
		
		function init () {
			var iframe = document.getElementById('container');
			if (iframe) {
				xtdom.addEventListener(iframe, 'load', doTransform, false);
				iframe.setAttribute('src', XTD_FILE);
					// FIXME: for some browser xtd has no MIME Type and cannot be displayed in the iframe
					// For instance Safari just shows the original folder in the Finder (MIME Type sniffing broken)
			}
		}
		
		// Shows how to transform the content of an iframe into an editor		
		function doTransform () {
			var iframe = document.getElementById('container');
			result = new xtiger.util.Logger(); // error msg accumulator
			FORM = new xtiger.util.Form("../axel/bundles"); // path relative to the template file (XTD_FILE) !
			FORM.setTemplateSource(iframe.contentDocument);
		  	FORM.enableTabGroupNavigation();
			if (FORM.transform(result)) { 
				FORM.injectStyleSheet('../axel/axel.css', result); // path relative to the template file (XTD_FILE) !
				loadDataToTemplate(result);
			}		
			if (result.inError()) { 
				alert (result.printErrors()); 
			}								
		}		
		
		// Shows how to load XML content into the template
		function loadDataToTemplate (result) {
			var source;
			var docs = {};
			docs['document'] = xtiger.debug.loadDocument(MAIN_DATA_FILE, result); // main document
			// note that you could sanity check if (docs['document'])...
			docs[FLOW_NAME] = xtiger.debug.loadDocument(FLOW_DATA_FILE, result); // separate flow
			// note that you could sanity check if (docs[FLOW_NAME])...
			source = new xtiger.util.DOMDataSource(docs);
			FORM.loadData(source, result); // loads data into the template
		}
		
		// Interactive dump function
		// FIXME : in the future if document carry 'xt:head' label="x" allow to use x instead of 'document'
		function dump() {
			var what = window.prompt("What do you want to dump ?","");
			what = what.replace(/\s/g,''); 
			if ((what.search(/\S/) == -1) || what.match(/^\[?[\'\"]\*[\"\']\]?$/) 
				|| what.match(/^[\'\"][^\*,]*[\'\"]$/) || what.match(/^\[[\'\"].*[\'\"]\]$/)) {
				alert('Executing dump(' + what + ')');
			} else {
				alert('Bad syntax, executing dump() instead')
				what = null;
			}
			var log = new xtiger.util.DOMLogger ();
			FORM.serializeData (log);
			var xmlString = log.dump(eval(what));
			alert(xmlString);  // you could as well POST it to a URL
		}
		xtdom.addEventListener(window,  'load', init, false);
	</script>
</head>
<body>
	<div id="menu" class="center noprint">
		<p class="center">The frame below contains a template with data loaded from two different XML documents</p>
		<p class="center">
			<input type='button' value="Test dump" onclick="javascript:dump()"/>			
			<span>with '', 'document', "['*']", "['document']", "['foo', 'bar']", etc.</span>
		</p>
	</div> 
	<div id="document">                            
	  	<iframe id="container">			
	  	</iframe>	
	</div>
</body>
</html>