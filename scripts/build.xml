<?xml version="1.0" encoding="UTF-8"?>
<project name="AXEL beta" default="build.lib" basedir=".">
<!--
AXEL Library built file system
==============================

Use this file to generate axel.js with "ant". You can select the source files
to include in the library by editing "ant.properties". See
"docs/integrators-guide.txt".

Main targets:

build.lib: creates a minified axel.js inside axel folder

build.debug: creates a non-minified axel.js inside axel folder so that it can     
             be used for debug

build.distrib: creates a new distribution from the version number in 
               distrib/release-nb.txt do not forget to do svn update before so
               that the distrib uses the latest revision number

build.doc: generates JSDoc documentation (very few files have been properly 
           commented). You must set the jsdoc.generator.dir property in
           ant.properties to the path of an installed jsdoc-toolkit and
           doc.build.dir to the folder where you want to generate the
           documentation
            
Author(s) : Stephane Sire, Antoine Yersin (build.doc)    
--> 

  <!-- 
     *****************************************************
     **             Initializations                     **
     *****************************************************
  -->    
  
  <target name="-load.properties">
    <property file="ant.properties"/>
  </target>

  <target name="-init.files" depends="-load.properties">
    <!-- /////////////////////////////////////////////////////////
         // AXEL source files to be included inside the library //
         //           EDIT ant.properties to change it          //
         /////////////////////////////////////////////////////////
    -->         
    <filelist id="files.core" dir="${core.src.dir}" 
              files="${core.lib.files}"/>
              
    <filelist id="files.editor" dir="${editor.src.dir}" 
              files="${editor.lib.files}"/>
              
    <filelist id="files.devices" dir="${devices.src.dir}"      
              files="${devices.lib.files}"/>

    <filelist id="files.plugins" dir="${plugins.src.dir}"     
              files="${plugins.lib.files}"/>
                  
    <filelist id="files.filters" dir="${filters.src.dir}"
              files="${filters.lib.files}"/>

    <filelist id="files.services" dir="${services.src.dir}"
              files="${services.lib.files}"/>

    <filelist id="files.utils" dir="${util.src.dir}"
              files="${util.lib.files}"/>
  </target>

  <target name="-init.release">
    <!-- PLEASE update version number in "../distribution/release-nb.txt"
    -->                     
    <loadfile property="release.number" 
              srcFile="../distrib/release-nb.txt"/>
    <loadfile property="distrib.copyright"
              srcFile="../distrib/copyright-header-js.txt"/>
    <loadfile property="distrib.license"
              srcFile="../distrib/license-header-js.txt"/>
    <property name="release.dir" 
              value="../${product.name}-${release.number}"/>
  </target> 
  
  <!-- "revision.number" property initialization
        It is set to the current revision number as per "svn info"; 
        note that this also works offline 
  -->
  <target name="-init.revision">
<!--    <exec executable="/bin/sh" outputproperty="revision.number">
      <arg line='-c "svn info -r "HEAD"| awk &quot;/Revision/{print\$$2}&quot;"'/>
    </exec> -->
    <property name="revision.number" value="git rep"/>
  </target>   

  <!-- *****************************************************
       **           Library build process                 **
       *****************************************************
  -->

  <target name="-flatten" depends="-load.properties, -init.files">
    <concat destfile="${build.dir}/${product.name}-tmp.js" force="no">
      <filelist refid="files.core"/>
      <filelist refid="files.editor"/>
      <filelist refid="files.devices"/>
      <filelist refid="files.plugins"/>
      <filelist refid="files.filters"/>
      <filelist refid="files.services"/>
      <filelist refid="files.utils"/>
    </concat>
  </target>

  <!-- Build minified axel.js 
  --> 
  <target name="build.lib" depends="-load.properties, -init.files, -init.release, -init.revision">
    
    <echo message="Creating minified AXEL library into ${build.dir}" />
    <!-- FIXME : fail if not exist ${build.dir} -->

    <antcall target="-flatten" />

    <!-- Minify library file -->
    <java jar="${javascript.compressor}" fork="true">
      <arg line="-o ${build.dir}/${product.name}-min.js ${build.dir}/${product.name}-tmp.js" />
    </java>

    <!-- Add license notice and copy to dest -->
    <filter token="COPYRIGHT" value="${distrib.copyright}"/>
    <filter token="VERSION" value="${release.number}"/>
    <filter token="LICENSE" value="${distrib.license}"/>
    <filter token="REV" value="${revision.number}"/>
    <!-- FIXME: we should include SVN revision number somewhere -->
    <copy file="../distrib/library-header-js.txt"
          tofile="${build.dir}/library-header-js.txt" filtering="true"/>

    <concat destfile="${build.dir}/${product.name}.js" force="no">
      <file file="${build.dir}/library-header-js.txt"/>
      <file file="${build.dir}/${product.name}-min.js"/>
    </concat>
        <delete file="${build.dir}/${product.name}-tmp.js"/>
    <delete file="${build.dir}/library-header-js.txt"/>
    <delete file="${build.dir}/${product.name}-min.js"/>
    
    <echo message="Creating CSS file into ${build.dir}" />
    
    <concat destfile="${build.dir}/${product.name}.css">
        <string>/**************************/
/*  AXEL library CSS file */
/**************************/
</string>
      <file file="${css.dir}/axel-core.css"/>
      <file file="${css.dir}/axel-style.css"/>
    </concat>
  </target>

  <!-- Build debug version of axel.js 
       (simple concatenation of source files) 
  -->
  <target name="build.debug" depends="-load.properties, -init.files, -init.release, -init.revision">
    <echo message="Creating debug AXEL library into ${build.dir}"/>
    <!-- FIXME : fail if not exist ${build.dir} -->

    <antcall target="-flatten"/>
    <!-- Add license notice and copy to dest -->
    <filter token="COPYRIGHT" value="${distrib.copyright}"/>
    <filter token="VERSION" value="${release.number}"/>
    <filter token="LICENSE" value="${distrib.license}"/>
    <filter token="REV" value="${revision.number}"/>
    <concat destfile="${build.dir}/${product.name}-brut.js" force="no">
      <file file="../distrib/library-header-js.txt"/>
      <file file="${build.dir}/${product.name}-tmp.js"/>
    </concat>
    <copy file="${build.dir}/${product.name}-brut.js" tofile="${build.dir}/${product.name}.js" filtering="true"/>
    <delete file="${build.dir}/${product.name}-brut.js"/>
    <delete file="${build.dir}/${product.name}-tmp.js"/>
    <!-- FIXME: do VERSION filtering stuff -->
  </target>

  <!-- *****************************************************
       **                 JS Documentation                **
       *****************************************************
  -->
  <target name="build.doc" depends="-load.properties">
    <echo message="Generating JSDoc documentation..."/>
    <echo message="Paths are :"/>
    <echo message=" - build.dir =  ${doc.build.dir}"/>
    <echo message=" - jsdoc.generator = ${jsdoc.generator}"/>
    <mkdir dir="${doc.build.dir}"/>
    <exec executable="java">
      <arg line='-jar ${jsdoc.generator.dir}/jsrun.jar ${jsdoc.generator.dir}/app/run.js ../src/ -r=4 -a -d=${doc.build.dir} -t=${jsdoc.generator.dir}/templates/jsdoc'/>
    </exec>
    <echo message="JSDoc documentation generated successfully"/>
  </target>

  <!-- *****************************************************
       **                 Utilities                       **
       *****************************************************
  -->

  <target name="clean" depends="-load.properties">
    <delete file="../${product.name}-${release.number}.zip"/>
    <delete file="../${product.name}-${release.number}.tar.gz"/>
    <delete dir="${release.dir}"/>
  </target>

   <!-- *****************************************************
        **                 Distribution                    **
        *****************************************************
  -->
  <target name="build.distrib" depends="-load.properties, -init.release, -init.files, -init.revision">

    <mkdir dir="${release.dir}"/>
    <filter token="COPYRIGHT" value="${distrib.copyright}"/>
    <filter token="VERSION" value="${release.number}"/>
    <filter token="LICENSE" value="${distrib.license}"/>
    <filter token="REV" value="${revision.number}"/>

    <copy todir="${release.dir}" file="../readme.html" filtering="true"/>

    <!-- axel -->
    <mkdir dir="${release.dir}/axel"/>
    <copy todir="${release.dir}/axel" file="../axel/axel.css"/>
    <mkdir dir="${release.dir}/axel/bundles"/>
    <copy todir="${release.dir}/axel/bundles">
      <fileset dir="../axel/bundles">
        <include name="**/*"/>
      </fileset>
    </copy>

    <!-- config -->
    <mkdir dir="${release.dir}/config"/>
    <copy file="../config/templates.distrib.js"
          tofile="${release.dir}/config/templates.js"/>

    <!-- contribs -->
    <mkdir dir="${release.dir}/contribs"/>

    <!-- schematizer source -->
    <mkdir dir="${release.dir}/contribs/src"/>
    <mkdir dir="${release.dir}/contribs/src/schemas"/>
    <copy todir="${release.dir}/contribs/src/schemas" filtering="true">
        <filelist dir="../contribs/src/schemas"
                  files="schemalogger.js, schemaserializer.js"/>
    </copy>

    <!-- schema generator -->
    <mkdir dir="${release.dir}/contribs/xmlschemas"/>
    <copy todir="${release.dir}/contribs/xmlschemas">
      <filelist dir="../contribs/xmlschemas"   
                files="XTigerCleanup.xsl,XTiger2Schema.xsl"/>
    </copy>

    <!-- CV Machine -->
    <mkdir dir="${release.dir}/contribs/cvmachine"/>
    <copy todir="${release.dir}/contribs/cvmachine">
      <filelist dir="../contribs/cvmachine"
                files="CVMachine.css 
                       CVMachine.xhtml 
                       nofileapi.html 
                       readme.html"/>
    </copy>

    <!-- data (used by templates in demos) -->
    <mkdir dir="${release.dir}/data"/>
    <copy todir="${release.dir}/data">
      <filelist dir="../data"   
                files="carteResto1.xml
                       carteResto2.xml
                       cvHaddock.xml        
                       ficheProjetW.xml                       
                       pageWeb.xhtml
                       publications.xml
                       thailand.xml
                       youtube.xml"/>
    </copy>
    <mkdir dir="${release.dir}/data/article"/>
    <copy todir="${release.dir}/data/article">
      <fileset dir="../data/article">
        <include name="final.xml"/>
        <include name="**/*.png"/>
      </fileset>
    </copy>

    <!-- demos -->
    <mkdir dir="${release.dir}/demos"/>
    <copy todir="${release.dir}/demos">
      <filelist dir="../demos"   
                files="index.html launch.js launch.xhtml installation.txt"/>
    </copy>

    <!-- design -->
    <!-- not part of the public release at the moment -->

    <!-- distrib -->
    <mkdir dir="${release.dir}/distrib"/>
    <copy file="../distrib/CHANGELOG.distrib.html" tofile="${release.dir}/distrib/CHANGELOG.html"/>
    <copy todir="${release.dir}/distrib">
      <filelist dir="../distrib"   
                files="AUTHORS
                       COPYING     
                       ISSUES.html
                       ROADMAP.html  
                       copyright-header-js.txt
                       library-header-js.txt
                       license-header-js.txt
                       "/>
    </copy>

    <!-- docs -->
    <mkdir dir="${release.dir}/docs"/>
    <copy todir="${release.dir}/docs">
      <filelist dir="../docs"   
                files="toc.html    
                       AXEL-beta-userman.html                       
                       integrators-guide.html
                       howto-filters.html
                       howto-services.html    
                       howto-plugins.html    
                       howto-link-plugin.html
                       howto-photo-plugin.html
                       howto-richtext-plugin.html
                       howto-video-plugin.html                       
                       docu.css
                       Spec.css
                       XTiger-XML-spec.html"/>
    </copy>

    <!-- editor -->
    <mkdir dir="${release.dir}/editor"/>
    <copy todir="${release.dir}/editor">
      <filelist dir="../editor"   
                files="editor.xhtml,editornoframe.xhtml"/>
    </copy>
    <mkdir dir="${release.dir}/editor/extras"/>
    <copy todir="${release.dir}/editor/extras">
      <filelist dir="../editor/extras"   
                files="editor.css,editor.js,input.html,intro.xhtml"/>
    </copy>

    <!-- examples -->
    <mkdir dir="${release.dir}/examples"/>
    <mkdir dir="${release.dir}/examples/tutorial"/>
    <copy todir="${release.dir}/examples/tutorial">
      <fileset dir="../examples/tutorial">
        <include name="**/*.xml"/>
        <include name="**/*.html"/>
        <include name="**/*.xhtml"/>
        <include name="**/*.css"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>

    <!-- scripts -->
    <mkdir dir="${release.dir}/scripts"/>
    <copy file="ant.distrib.properties" tofile="${release.dir}/scripts/ant.properties"/>
    <copy file="build.distrib.xml" 
          tofile="${release.dir}/scripts/build.xml"  filtering="true"/>

    <!-- ruby toy server -->
    <mkdir dir="${release.dir}/scripts/server"/>
    <copy file="server/server.rb"
          tofile="${release.dir}/scripts/server/server.rb"/>

    <!-- copy source files with copyright and license in headers -->
    <mkdir dir="${release.dir}/src"/>

    <!-- core lib -->
    <mkdir dir="${release.dir}/src/core"/>
    <copy todir="${release.dir}/src/core" filtering="true">
      <filelist dir="${core.src.dir}" files="${core.distrib.files}"/>
    </copy>

    <!-- editor lib -->
    <mkdir dir="${release.dir}/src/editor"/>
    <mkdir dir="${release.dir}/src/editor/classical"/>
    <copy todir="${release.dir}/src/editor/classical" filtering="true">
      <filelist dir="${editor.src.dir}" files="${editor.distrib.files}"/>
    </copy>

    <!-- plugins lib -->
    <mkdir dir="${release.dir}/src/plugins"/>
    <copy todir="${release.dir}/src/plugins" filtering="true">
      <filelist dir="${plugins.src.dir}" files="${plugins.distrib.files}"/>
    </copy>       

    <!-- devices lib -->
    <mkdir dir="${release.dir}/src/devices"/>
    <copy todir="${release.dir}/src/devices" filtering="true">
      <filelist dir="${devices.src.dir}" files="${devices.distrib.files}"/>
    </copy>       
    
    <!-- filters lib -->
    <mkdir dir="${release.dir}/src/filters"/>
    <copy todir="${release.dir}/src/filters" filtering="true">
      <filelist dir="${filters.src.dir}" files="${filters.distrib.files}"/>
    </copy>       
    
    <!-- services lib -->
    <mkdir dir="${release.dir}/src/services"/>
    <copy todir="${release.dir}/src/services" filtering="true">
      <filelist dir="${services.src.dir}" files="${services.distrib.files}"/>
    </copy>   

    <!-- utils lib -->
    <mkdir dir="${release.dir}/src/util"/>
    <copy todir="${release.dir}/src/util" filtering="true">
      <filelist dir="${util.src.dir}" files="${util.distrib.files}"/>
    </copy>
    
    <!-- css lib -->
    <mkdir dir="${release.dir}/stylesheets"/>
    <copy todir="${release.dir}/stylesheets">
      <filelist dir="${css.dir}" 
                files="axel-core.css axel-style.css"/>
    </copy>

    <!-- templates -->
    <mkdir dir="${release.dir}/templates"/>
    <copy todir="${release.dir}/templates">
      <filelist dir="../templates"   
                files="Article.css
                       Article.xhtml
                       Carte-Resto.xhtml
                       Curriculum.xhtml
                       Editors.xhtml
                       Fiche-Projet.xhtml
                       Hello-world.xhtml
                       Meeting-Report.xhtml
                       PageWeb.xhtml
                       Photos.xhtml
                       Plugins.xhtml
                       Publications.xhtml
                       Requirements.xhtml
                       Services.xhtml
                       Story.xhtml
                       Suivi.xhtml
                       Taches.xhtml
                       Template.xhtml
                       Tickets.xhtml
                       Workpackage.xhtml
                       YouTube.xhtml
                       Preview.css        
                       StructPart.css
                       "/>
    </copy>

    <!-- tests -->
    <mkdir dir="${release.dir}/test"/>
    <mkdir dir="${release.dir}/test/auto"/>
    <copy todir="${release.dir}/test/auto">
      <filelist dir="../test/auto"   
                files="assert.js,diff.js,loadSave.js,loadSave.html"/>
    </copy>
    <copy file="../test/auto/configuration.distrib.js"        
          tofile="${release.dir}/test/auto/configuration.js"/>

    <mkdir dir="${release.dir}/test/data"/>
    <copy todir="${release.dir}/test/data">
      <filelist dir="../test/data"   
                    files="choice.xml
                           core.xml
                           repeat.xml
                           hello.xml
                           link.xml
                           richtext.xml
                           video.xml
                           "/>
    </copy>

    <mkdir dir="${release.dir}/test/templates"/>
    <copy todir="${release.dir}/test/templates">
      <filelist dir="../test/templates"   
                    files="Choice.xhtml
                           Core.xhtml
                           Repeat.xhtml
                           Template.css
                           Link.xhtml
                           RichText.xhtml
                           Video.xhtml
                           "/>
    </copy>
    
    <mkdir dir="${release.dir}/test/gui"/>
    <copy todir="${release.dir}/test/gui">
      <filelist dir="../test/gui"   
                    files="Core.xhtml
                           "/>
    </copy>

    <!-- generates minified AXEL within distribution -->
    <echo message="Generating minified library in distribution"/>
    <exec executable="/bin/sh">
      <arg line='-c "cd ${release.dir}/scripts; ant build.lib"'/>
    </exec>

    <!-- compresses distribution -->
    <zip destfile="../${product.name}-${release.number}.zip"
             basedir="${release.dir}"
             includes="**/*"/>
    <tar destfile="../${product.name}-${release.number}.tar.gz" 
             compression="gzip">
      <tarfileset dir="${release.dir}"
                        prefix="${product.name}-${release.number}"
                        preserveLeadingSlashes="true">
        <include name="**/*"/>
      </tarfileset>
    </tar>
  </target>
</project>
